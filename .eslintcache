[{"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\index.js":"1","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\App\\App.tsx":"2","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\serviceWorker.js":"3","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\store.ts":"4","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\FeaturesInteractions\\FeaturesInterations.tsx":"5","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\FeatureButtons\\FeatureButtons.tsx":"6","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\reducers\\index.ts":"7","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\actions.ts":"8","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\history.js":"9","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\Crop\\Crop.tsx":"10","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\AdjustmentInteractions\\AdjustmentInteractions.tsx":"11","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\Rotate\\Rotate.tsx":"12","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\Select\\Select.tsx":"13","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\actionTypes.ts":"14","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\CanvasAndImage\\CanvasAndImage.tsx":"15","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\utils\\imageConversion.ts":"16","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\utils\\CanvasHelper\\canvasHelper.ts":"17","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\utils\\ImageHelper\\imageHelper.ts":"18"},{"size":716,"mtime":1641205130130,"results":"19","hashOfConfig":"20"},{"size":1495,"mtime":1644895559095,"results":"21","hashOfConfig":"20"},{"size":5227,"mtime":1600003445004,"results":"22","hashOfConfig":"20"},{"size":752,"mtime":1647059151163,"results":"23","hashOfConfig":"20"},{"size":1391,"mtime":1641718094578,"results":"24","hashOfConfig":"20"},{"size":1819,"mtime":1641718081322,"results":"25","hashOfConfig":"20"},{"size":1787,"mtime":1647059212407,"results":"26","hashOfConfig":"20"},{"size":1037,"mtime":1647059168025,"results":"27","hashOfConfig":"20"},{"size":87,"mtime":1600003445002,"results":"28","hashOfConfig":"20"},{"size":11330,"mtime":1647060049091,"results":"29","hashOfConfig":"20"},{"size":13220,"mtime":1647060527778,"results":"30","hashOfConfig":"20"},{"size":9628,"mtime":1647059974143,"results":"31","hashOfConfig":"20"},{"size":21256,"mtime":1641635756693,"results":"32","hashOfConfig":"20"},{"size":189,"mtime":1647059136384,"results":"33","hashOfConfig":"20"},{"size":5581,"mtime":1647059301109,"results":"34","hashOfConfig":"20"},{"size":1790,"mtime":1647059982150,"results":"35","hashOfConfig":"20"},{"size":2996,"mtime":1647060041095,"results":"36","hashOfConfig":"20"},{"size":7694,"mtime":1647008167341,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"k8tuoe",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\index.js",[],["80","81"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\App\\App.tsx",["82"],"import * as React from 'react';\r\nimport { GlobalState } from '../../type.js';\r\nimport CanvasAndImage from '../CanvasAndImage/CanvasAndImage';\r\nimport FeatureButtons from '../FeatureButtons/FeatureButtons';\r\nimport FeatureInteractions from '../FeaturesInteractions/FeaturesInterations';\r\nimport ImageHelper from '../../utils/ImageHelper/imageHelper'\r\n\r\nfunction App() {\r\n\r\n    const [canvasRef, setCanvasRef] = React.useState(React.createRef())\r\n    const [canvasContainerRef, setCanvasContainerRef] = React.useState(React.createRef())\r\n    const [imageHelper, setImageHelper] = React.useState(undefined)\r\n    // const [isImageLoaded, setIsImageLoaded] = React.useState(false)\r\n\r\n    const globalState: GlobalState = {\r\n        canvasRef,\r\n        canvasContainerRef,\r\n        imageHelper\r\n    }\r\n\r\n    return <div className=\"d-flex flex-column justify-content-center align-items-stretch vw-100 vh-100\">\r\n        <div className=\"d-flex flex-row border\" style={{ flex: 3 }}>\r\n            <div className=\"border\" style={{ flex: 3 }}>\r\n                <CanvasAndImage setImageHelper={setImageHelper} setCanvasRef={setCanvasRef} setCanvasContainerRef={setCanvasContainerRef} />\r\n            </div>\r\n\r\n            <div className=\"border\" style={{ flex: 1 }}>\r\n                <FeatureInteractions globalState={globalState} />\r\n            </div>\r\n        </div>\r\n        <div className=\"border\" style={{ flex: 1 }}>\r\n            <FeatureButtons />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default App;",["83","84"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\serviceWorker.js",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\store.ts",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\FeaturesInteractions\\FeaturesInterations.tsx",["85"],"import React from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport history from '../../history.js';\r\n\r\nimport AdjustmentInteractoins from \"../AdjustmentInteractions/AdjustmentInteractions\";\r\nimport Crop from \"../Crop/Crop\";\r\nimport Rotate from \"../Rotate/Rotate\";\r\nimport Select from \"../Select/Select\";\r\nimport { GlobalState } from \"../../type.js\";\r\nimport { RootState } from \"../../redux/store.js\";\r\n\r\ninterface props {\r\n    globalState: GlobalState\r\n}\r\n\r\nfunction FeaturesInteractions(props: props) {\r\n    console.log(props.globalState)\r\n    return <div>\r\n        <Router history={history}>\r\n            <Switch>\r\n                <Route exact={true} path=\"/\" render={() => <div></div>} />\r\n                <Route path=\"/adjustments\" render={() => <AdjustmentInteractoins globalState={props.globalState} />} />\r\n                <Route path=\"/crop\" render={() => <Crop globalState={props.globalState} />} />\r\n                {/* <Route path=\"/select\" render={() => <Select globalState={props.globalState} />} /> */}\r\n                <Route path=\"/rotate\" render={() => <Rotate globalState={props.globalState} />} /> \r\n            </Switch>\r\n        </Router>\r\n    </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return { ...state };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(FeaturesInteractions);","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\FeatureButtons\\FeatureButtons.tsx",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\reducers\\index.ts",["86","87"],"import { setSelectionInfo } from \"../actions\";\r\nimport { state } from \"../../type.js\";\r\n\r\n// combine multiple reducers (function which uses data from actions (type, data(payload)) to set state(store))\r\n// you can have multiple reducer function and combine them but here we will only have one reducer function as of now\r\n// reducer function returns the state according to the action type\r\n\r\nimport { SET_IMAGE_LOADED, SET_SELECTION_INFO, SHOW_DISABLE_SELECTION_TOOLTIP } from \"./../actionTypes\";\r\n\r\n\r\n\r\nconst initialState: state = {\r\n  isImageLoaded: false,\r\n  canvasFunctions: null,\r\n  canvasElements: null,\r\n  selectionInfo: {\r\n    selectionEnabled: false,\r\n    selectionMapping: null,\r\n    temporaryDisabled: false,\r\n    fullResSelectionMapping: null\r\n  },\r\n  showDisableSelectionTooltip: false\r\n}\r\n\r\nexport default (state: state = initialState, action: any): state => {\r\n  console.log(\"redux state\", state, \"payload\", action.payload);\r\n  switch (action.type) {\r\n    case SET_IMAGE_LOADED:\r\n      {\r\n        return {\r\n          ...state,\r\n          // ...action.payload // it creates confustion\r\n          isImageLoaded: action.payload.isImageLoaded\r\n        }\r\n      }\r\n    case SET_SELECTION_INFO:\r\n      {\r\n        return {\r\n          ...state,\r\n          selectionInfo: {\r\n            selectionEnabled: action.payload.selectionEnabled,\r\n            selectionMapping: action.payload.selectionMapping,\r\n            fullResSelectionMapping: action.payload.fullResSelectionMapping,\r\n            temporaryDisabled: false\r\n          }\r\n        }\r\n      }\r\n    case SHOW_DISABLE_SELECTION_TOOLTIP:\r\n      {\r\n        return {\r\n          ...state,\r\n          showDisableSelectionTooltip: action.payload.value\r\n        }\r\n      }\r\n    default:\r\n      {\r\n        return state\r\n      }\r\n  }\r\n}","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\actions.ts",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\history.js",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\Crop\\Crop.tsx",["88"],"import React from \"react\";\r\nimport history from \"../../history.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store.js\";\r\nimport { GlobalState, WidthHeight, Point } from \"../../type.js\";\r\n\r\n// only those properties which are required\r\ntype mouseEvent = {\r\n    clientX: number,\r\n    clientY: number\r\n}\r\n\r\ntype props = Partial<RootState> & {\r\n    globalState: GlobalState\r\n}\r\n\r\n\r\nfunction Crop(props: props) {\r\n    const [cropEnabled, setCropEnabled] = React.useState(false);\r\n    const [needToEnableCrop, setNeedToEnableCrop] = React.useState(false);\r\n    \r\n    \r\n\r\n    React.useEffect(() => {\r\n        if (props.isImageLoaded === true && !cropEnabled && !needToEnableCrop) {\r\n            setNeedToEnableCrop(true)\r\n        }\r\n    }, [props.isImageLoaded])\r\n\r\n    React.useEffect(() => disableCrop, [])\r\n\r\n    React.useEffect(() => {\r\n        if (cropEnabled === false && needToEnableCrop === true) {\r\n            enableCrop();\r\n\r\n            if (props.selectionInfo?.selectionEnabled) {\r\n                props.globalState.imageHelper?.resetDisplayImage();\r\n            }\r\n        }\r\n        console.log(cropRectRef)\r\n    \r\n    })\r\n\r\n    // this is used by crop rect on click handler, clicked near left edge its value = l, if top left then = lr, if in center = ''\r\n    let nearEdge: string = '';\r\n\r\n    //when on click on cropRect the initial position is stored here and we calculate distance of this initial position - current position\r\n    let initialPosition: Point = { x: 0, y: 0 };\r\n\r\n    // store value of previous translate value, used to calculate new translate value\r\n    let translate: Point = { x: 0, y: 0 };\r\n\r\n    // translate value of previous onmousedown session(changed on onmouseup)\r\n    let offset: Point = { x: 0, y: 0 };\r\n\r\n    // dimension of previous onmousedown session \r\n    let dimensionOffset: WidthHeight = { width: 0, height: 0 };\r\n\r\n    let cropRectRef: React.RefObject<any> = React.useRef();\r\n    console.log(\"value reseted\")\r\n    React.useEffect(() => {\r\n        console.log(`value reset to ${cropRectRef}`)\r\n    }, [cropRectRef])\r\n\r\n    const isNearEdge = ({ clientX: mouseX, clientY: mouseY }: mouseEvent): boolean => {\r\n\r\n        let { left: cropRectLeft, top: cropRectTop, bottom: cropRectBottom, right: cropRectRight } = cropRectRef.current.getBoundingClientRect();\r\n\r\n        nearEdge = '';\r\n        if (Math.abs(mouseX - cropRectLeft) < 10) {\r\n            nearEdge += 'l';\r\n        }\r\n        else if (Math.abs(mouseX - cropRectRight) < 10) {\r\n            nearEdge += 'r';\r\n        }\r\n\r\n        if (Math.abs(mouseY - cropRectTop) < 10) {\r\n            nearEdge += 't';\r\n        }\r\n        else if (Math.abs(mouseY - cropRectBottom) < 10) {\r\n            nearEdge += 'b';\r\n        }\r\n\r\n        if (nearEdge.length > 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    const cropRectOnClickHandler = (e: mouseEvent): void => {\r\n        console.log(cropRectRef)\r\n        initialPosition = { x: e.clientX, y: e.clientY };\r\n\r\n        if (isNearEdge(e)) {\r\n            window.onmousemove = changeCropRectDimension;\r\n        }\r\n        else {\r\n            window.onmousemove = changeCropRectPosition;\r\n        }\r\n        window.onmouseup = () => {\r\n            offset = { x: translate.x, y: translate.y };\r\n            dimensionOffset = { height: cropRectRef.current.getBoundingClientRect().height, width: cropRectRef.current.getBoundingClientRect().width };\r\n            window.onmousemove = null;\r\n        }\r\n    }\r\n\r\n    function changeCropRectDimension(e: mouseEvent): void {\r\n\r\n        let cropRect = cropRectRef.current;\r\n        let widthChange = 0;\r\n        let heightChange = 0;\r\n\r\n        if (nearEdge.indexOf('l') !== -1) {\r\n            translate.x = offset.x + (e.clientX - initialPosition.x);\r\n            widthChange = e.clientX - initialPosition.x;\r\n        }\r\n        else if (nearEdge.indexOf('r') !== -1) {\r\n            widthChange = initialPosition.x - e.clientX;\r\n        }\r\n\r\n        if (nearEdge.indexOf('t') !== -1) {\r\n            translate.y = offset.y + (e.clientY - initialPosition.y);\r\n            heightChange = e.clientY - initialPosition.y;\r\n        }\r\n        else if (nearEdge.indexOf('b') !== -1) {\r\n            heightChange = initialPosition.y - e.clientY;\r\n        }\r\n        cropRect.style.width = `${dimensionOffset.width - widthChange}px`;\r\n        cropRect.style.height = `${dimensionOffset.height - heightChange}px`;\r\n        cropRect.style.transform = `translateX(${translate.x}px) translateY(${translate.y}px)`;\r\n    }\r\n\r\n    function changeCropRectPosition({ clientX, clientY }: mouseEvent) {\r\n        \r\n        if (!props.isImageLoaded || props.globalState.imageHelper === undefined) {\r\n            // TODO - display message to user\r\n            console.debug(\"either Image is not loaded or imageHelper is not intialized yet\")\r\n            return;\r\n        }\r\n\r\n        let newTraslateX = offset.x + (clientX - initialPosition.x);\r\n        let newTraslateY = offset.y + (clientY - initialPosition.y);\r\n\r\n        let cropRect = cropRectRef.current;\r\n\r\n        // container left right (boundaries crop rect should not exceed these values)\r\n        let containerRect = props.globalState.imageHelper.canvasHelper.canvasContainerElement.getBoundingClientRect();\r\n\r\n        let newLeft = newTraslateX + Math.floor(cropRect.style.left);\r\n        let newRight = newLeft + Math.floor(cropRect.style.width);\r\n        let newTop = newTraslateY + Math.floor(cropRect.style.top);\r\n        let newBottom = newTop + Math.floor(cropRect.style.height);\r\n\r\n        if (newLeft < containerRect.left) {\r\n            // console.log(\"wrong\")\r\n            // = left most\r\n            translate.x = containerRect.left - Math.floor(cropRect.style.left);\r\n        }\r\n        else if (newRight > containerRect.right) {\r\n            // console.log(\"wrong\");\r\n            // = right most\r\n            translate.x = containerRect.right - Math.floor(cropRect.style.width);\r\n        }\r\n        else {\r\n            translate.x = newTraslateX\r\n        }\r\n\r\n        if (newTop < containerRect.top) {\r\n            // console.log(\"wrong\")\r\n            // top most\r\n            translate.y = containerRect.top - Math.floor(cropRect.style.top);\r\n        }\r\n        else if (newBottom > containerRect.bottom) {\r\n            // console.log(\"wrong\")\r\n            // = bottom most\r\n            translate.y = containerRect.bottom - Math.floor(cropRect.style.height);\r\n        }\r\n        else {\r\n            translate.y = newTraslateY;\r\n        }\r\n\r\n        cropRect.style.transform = `translateX(${translate.x}px) translateY(${translate.y}px)`;\r\n\r\n    }\r\n\r\n    function enableCrop() {\r\n        if (!props.isImageLoaded || props.globalState.imageHelper === undefined) {\r\n            // TODO - display message to user\r\n            console.debug(\"either Image is not loaded or imageHelper is not intialized yet\")\r\n            return;\r\n        }\r\n        let canvasContainer = props.globalState.imageHelper.canvasHelper.canvasContainerElement;\r\n        let canvasRect = canvasContainer.getBoundingClientRect();\r\n        let cropRect = cropRectRef.current;\r\n\r\n        cropRect.style.width = canvasRect.width / 2 + 'px';\r\n        cropRect.style.height = canvasRect.height / 2 + 'px';\r\n        cropRect.style.position = 'absolute';\r\n        cropRect.style.top = '0px';\r\n        cropRect.style.left = '0px';\r\n        cropRect.style.border = '1px solid white';\r\n\r\n        translate = { x: (canvasRect.left + canvasRect.width / 4), y: (canvasRect.top + canvasRect.height / 4) };\r\n        cropRect.style.transform = `translateX(${translate.x}px) translateY(${translate.y}px)`;\r\n        offset = { x: (canvasRect.left + canvasRect.width / 4), y: (canvasRect.top + canvasRect.height / 4) };\r\n\r\n\r\n        cropRect.onmousedown = cropRectOnClickHandler;\r\n\r\n        dimensionOffset = { height: canvasRect.height / 2, width: canvasRect.width / 2 };\r\n\r\n        setCropEnabled(true)\r\n        setNeedToEnableCrop(false)\r\n\r\n        console.log(\"crop enabled\");\r\n    }\r\n\r\n    function disableCrop() {\r\n        window.onmousemove = null;\r\n        window.onmouseup = null;\r\n        cropRectRef.current.onmousedown = null;\r\n        console.debug(\"disable Crop\");\r\n    }\r\n\r\n    function confirmCrop() {\r\n\r\n        if (!props.isImageLoaded || props.globalState.imageHelper === undefined) {\r\n            // TODO - display message to user\r\n            console.debug(\"either Image is not loaded or imageHelper is not intialized yet\")\r\n            return;\r\n        }\r\n\r\n        let { left, top, width, height } = cropRectRef.current.getBoundingClientRect();\r\n        let { left: canvasLeft, top: canvasTop } = props.globalState.imageHelper.canvasHelper.canvasContainerElement.getBoundingClientRect();\r\n\r\n        // dimensions of original crop rect\r\n        left = left - canvasLeft;\r\n        top = top - canvasTop;\r\n\r\n        let image = props.globalState.imageHelper.editedImageData;\r\n        console.log(props)\r\n        let fullResImage = props.globalState.imageHelper.fullResEditedImageData;\r\n\r\n        console.log(`image = ${image} and fullResImage = ${fullResImage}`)\r\n        // ------------------------------------SCALING------------------------------------------\r\n        let scaleX = fullResImage.width / image.width;\r\n        let scaleY = fullResImage.height / image.height;\r\n\r\n        let scaledWidth = width * scaleX;\r\n        let scaledHeight = height * scaleY;\r\n\r\n        let scaledTop = top * scaleY;\r\n        let scaledLeft = left * scaleX;\r\n\r\n        // ------------------------------------SCALING------------------------------------------\r\n\r\n        let cropImage = new ImageData(Math.floor(scaledWidth), Math.floor(scaledHeight));\r\n\r\n        let index = 0;\r\n\r\n        let imageWidth = Math.floor(fullResImage.width);\r\n\r\n        for (let i = Math.floor(scaledTop); i < Math.floor(scaledTop) + Math.floor(scaledHeight); i++) {\r\n\r\n            for (let j = Math.floor(scaledLeft); j < Math.floor(scaledLeft) + Math.floor(scaledWidth); j++) {\r\n\r\n                let index2 = (i * imageWidth + j) * 4;\r\n                cropImage.data[index] = fullResImage.data[index2];\r\n                cropImage.data[index + 1] = fullResImage.data[index2 + 1];\r\n                cropImage.data[index + 2] = fullResImage.data[index2 + 2];\r\n                cropImage.data[index + 3] = fullResImage.data[index2 + 3];\r\n\r\n                index += 4;\r\n            }\r\n\r\n        }\r\n        props.globalState.imageHelper.fullResImageData = cropImage;\r\n        history.push(\"/\");\r\n    }\r\n\r\n    console.log(props)\r\n    let { isImageLoaded, selectionInfo } = props;\r\n    console.log(\"rerendered\")\r\n\r\n    return <div>\r\n\r\n        {!isImageLoaded && <div className=\"alert alert-danger\">\r\n            Select image First to start editing\r\n        </div>}\r\n\r\n        {selectionInfo?.selectionEnabled && <div className=\"alert alert-danger\">\r\n            this feature does not support editing with selection\r\n        </div>}\r\n\r\n        <div className=\"text-center\"><button onClick={confirmCrop} className=\"btn btn-primary\">confirm</button></div>\r\n        <div ref={cropRectRef} style={{ position: \"absolute\" }}></div>\r\n    </div>;\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    console.log(state);\r\n    return { ...state };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Crop);","C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\AdjustmentInteractions\\AdjustmentInteractions.tsx",["89","90","91","92","93","94"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\Rotate\\Rotate.tsx",["95","96","97","98","99","100","101"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\Select\\Select.tsx",["102","103","104","105","106","107","108","109","110","111","112","113"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\redux\\actionTypes.ts",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\components\\CanvasAndImage\\CanvasAndImage.tsx",["114","115","116","117","118","119","120","121","122"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\utils\\imageConversion.ts",[],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\utils\\CanvasHelper\\canvasHelper.ts",["123"],"C:\\Users\\rs\\Desktop\\git\\photo-editor\\src\\utils\\ImageHelper\\imageHelper.ts",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":19},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"132","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"135","line":25,"column":1,"nodeType":"136","endLine":60,"endColumn":2},{"ruleId":"137","severity":1,"message":"138","line":28,"column":8,"nodeType":"139","endLine":28,"endColumn":29,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"141","line":19,"column":12,"nodeType":"130","messageId":"131","endLine":19,"endColumn":23},{"ruleId":"128","severity":1,"message":"142","line":20,"column":12,"nodeType":"130","messageId":"131","endLine":20,"endColumn":19},{"ruleId":"128","severity":1,"message":"143","line":21,"column":12,"nodeType":"130","messageId":"131","endLine":21,"endColumn":22},{"ruleId":"128","severity":1,"message":"144","line":22,"column":12,"nodeType":"130","messageId":"131","endLine":22,"endColumn":21},{"ruleId":"137","severity":1,"message":"145","line":38,"column":12,"nodeType":"139","endLine":38,"endColumn":46,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"147","line":101,"column":14,"nodeType":"130","messageId":"131","endLine":101,"endColumn":31},{"ruleId":"128","severity":1,"message":"148","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":29},{"ruleId":"128","severity":1,"message":"149","line":17,"column":14,"nodeType":"130","messageId":"131","endLine":17,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":31,"column":25,"nodeType":"130","messageId":"152","endLine":31,"endColumn":30},{"ruleId":"128","severity":1,"message":"153","line":104,"column":13,"nodeType":"130","messageId":"131","endLine":104,"endColumn":22},{"ruleId":"128","severity":1,"message":"154","line":132,"column":15,"nodeType":"130","messageId":"131","endLine":132,"endColumn":30},{"ruleId":"137","severity":1,"message":"155","line":202,"column":8,"nodeType":"139","endLine":202,"endColumn":10,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"157","line":213,"column":8,"nodeType":"139","endLine":213,"endColumn":10,"suggestions":"158"},{"ruleId":"128","severity":1,"message":"159","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":15},{"ruleId":"128","severity":1,"message":"160","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":26},{"ruleId":"128","severity":1,"message":"161","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":23},{"ruleId":"128","severity":1,"message":"162","line":199,"column":13,"nodeType":"130","messageId":"131","endLine":199,"endColumn":33},{"ruleId":"163","severity":1,"message":"164","line":355,"column":19,"nodeType":"165","messageId":"166","endLine":355,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":355,"column":31,"nodeType":"165","messageId":"166","endLine":355,"endColumn":33},{"ruleId":"128","severity":1,"message":"167","line":432,"column":13,"nodeType":"130","messageId":"131","endLine":432,"endColumn":18},{"ruleId":"128","severity":1,"message":"168","line":435,"column":17,"nodeType":"130","messageId":"131","endLine":435,"endColumn":34},{"ruleId":"137","severity":1,"message":"169","line":473,"column":27,"nodeType":"170","endLine":473,"endColumn":65},{"ruleId":"137","severity":1,"message":"169","line":510,"column":23,"nodeType":"170","endLine":510,"endColumn":61},{"ruleId":"137","severity":1,"message":"171","line":514,"column":32,"nodeType":"170","endLine":514,"endColumn":60},{"ruleId":"128","severity":1,"message":"172","line":548,"column":14,"nodeType":"130","messageId":"131","endLine":548,"endColumn":45},{"ruleId":"128","severity":1,"message":"160","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"173","line":16,"column":11,"nodeType":"130","messageId":"131","endLine":16,"endColumn":16},{"ruleId":"128","severity":1,"message":"154","line":39,"column":9,"nodeType":"130","messageId":"131","endLine":39,"endColumn":29},{"ruleId":"128","severity":1,"message":"174","line":46,"column":12,"nodeType":"130","messageId":"131","endLine":46,"endColumn":25},{"ruleId":"128","severity":1,"message":"175","line":75,"column":9,"nodeType":"130","messageId":"131","endLine":75,"endColumn":23},{"ruleId":"137","severity":1,"message":"176","line":75,"column":26,"nodeType":"177","endLine":75,"endColumn":84},{"ruleId":"137","severity":1,"message":"178","line":77,"column":25,"nodeType":"170","endLine":77,"endColumn":80},{"ruleId":"137","severity":1,"message":"179","line":78,"column":24,"nodeType":"180","endLine":78,"endColumn":102},{"ruleId":"137","severity":1,"message":"181","line":98,"column":8,"nodeType":"139","endLine":98,"endColumn":43,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"164","line":39,"column":16,"nodeType":"165","messageId":"166","endLine":39,"endColumn":18},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'ImageHelper' is defined but never used.","Identifier","unusedVar","'Select' is defined but never used.","'setSelectionInfo' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'cropEnabled' and 'needToEnableCrop'. Either include them or remove the dependency array.","ArrayExpression",["185"],"'temparature' is assigned a value but never used.","'shadows' is assigned a value but never used.","'highlights' is assigned a value but never used.","'sharpness' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'displayChanges', 'props.globalState.imageHelper', and 'props.isImageLoaded'. Either include them or remove the dependency array.",["186"],"'changeTemparature' is defined but never used.","'imageDataToImageSrc' is defined but never used.","'calculateAngleInRadian' is defined but never used.","no-self-assign","'angle' is assigned to itself.","selfAssignment","'imageData' is assigned a value but never used.","'canvasFunctions' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.globalState.imageHelper', 'props.isImageLoaded', and 'props.selectionInfo?.selectionEnabled'. Either include them or remove the dependency array.",["187"],"React Hook React.useEffect has missing dependencies: 'props.globalState.imageHelper' and 'props.isImageLoaded'. Either include them or remove the dependency array.",["188"],"'Check' is defined but never used.","'Component' is defined but never used.","'showSelection' is defined but never used.","'startPosition' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'count' is assigned a value but never used.","'checkNearByPixels' is defined but never used.","Assignments to the 'editedImage' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","Assignments to the 'selectionMapping' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","'generateFullResSelectionMapping' is defined but never used.","'props' is defined but never used.","'isImageLoaded' is assigned a value but never used.","'canvasElements' is assigned a value but never used.","Assignments to the 'canvasElements' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","ObjectExpression","Assignments to the 'maxCanvasSize' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Assignments to the 'canvasHelper' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","NewExpression","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["189"],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [cropEnabled, needToEnableCrop, props.isImageLoaded]",{"range":"200","text":"201"},"Update the dependencies array to be: [brightness, contrast, displayChanges, props.globalState.imageHelper, props.isImageLoaded, saturation]",{"range":"202","text":"203"},"Update the dependencies array to be: [props.globalState.imageHelper, props.isImageLoaded, props.selectionInfo?.selectionEnabled]",{"range":"204","text":"205"},"Update the dependencies array to be: [props.globalState.imageHelper, props.isImageLoaded]",{"range":"206","text":"207"},"Update the dependencies array to be: [props, props.showDisableSelectionTooltip]",{"range":"208","text":"209"},[771,792],"[cropEnabled, needToEnableCrop, props.isImageLoaded]",[1523,1557],"[brightness, contrast, displayChanges, props.globalState.imageHelper, props.isImageLoaded, saturation]",[8148,8150],"[props.globalState.imageHelper, props.isImageLoaded, props.selectionInfo?.selectionEnabled]",[8566,8568],"[props.globalState.imageHelper, props.isImageLoaded]",[3629,3664],"[props, props.showDisableSelectionTooltip]"]